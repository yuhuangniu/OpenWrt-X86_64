#=================================================
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
#=================================================

name: Build OpenWrt_x86_64

on: 
  #release:
  #  types: [published]
    
  #push:
  #  branches:
  #    - master

  schedule:
    - cron: 0 8 * * 5
  
  #watch:
  #  types: [started]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Set Date
      run: |
         date=$(date +%Y-%m-%d)
         echo "::set-env name=DATE::$date"

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
        TZ: Asia/Shanghai
      run: |
        docker rmi `docker images -q`
        echo "Deleting files, please wait ..."
        sudo rm -rf \
          /usr/share/dotnet \
          /etc/mysql \
          /etc/php
        sudo -E apt-get -y purge \
          azure-cli \
          ghc* \
          zulu* \
          hhvm \
          llvm* \
          firefox \
          google* \
          dotnet* \
          powershell \
          openjdk* \
          mysql* \
          php*
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev patch unzip lib32gcc1 libc6-dev-i386 subversion flex node-uglify gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils  libelf-dev autoconf automake libtool autopoint device-tree-compiler libuv-dev python3.6 zlib1g-dev upx-ucl node-uglify antlr3 gperf
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
        sudo timedatectl set-timezone "$TZ"

    - name: Clone source code
      env: 
        REPO_URL: https://github.com/coolsnowwolf/lede
        REPO_BRANCH: master
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        sed -i '5s/#//' feeds.conf.default
    
    - name: Synchronize source code
      working-directory: ./openwrt
      run: |
         git pull

    - name: Update & Install feeds
      working-directory: ./openwrt
      run: |
        ./scripts/feeds clean
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Import external feeds
      working-directory: ./openwrt
      run: |
        git clone -b master https://github.com/vernesong/OpenClash.git package/lean/OpenClash

    - name: Configuration Customization - Build OpenWrt_x86_64
      env:
        CONFIG_FILE: 'diff.config'
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        cd openwrt && make defconfig
        
    - name: Download package
      working-directory: ./openwrt
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Build firmware
      working-directory: ./openwrt
      run: |
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s
        
    - name : Upload artifact
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt
        path: openwrt/bin/targets/x86/64/openwrt-x86-64-combined-squashfs.img.gz

    - name: Upload targets to release
      uses: svenstaro/upload-release-action@v1-release
      with:
        repo_token: ${{ secrets.super_token }}
        file: openwrt/bin/targets/x86/64/openwrt-x86-64*
        asset_name: openwrt-x86-64.gz
        tag: ${{ env.DATE }}
        overwrite: true
        file_glob: true
